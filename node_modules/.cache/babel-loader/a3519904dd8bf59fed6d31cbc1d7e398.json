{"ast":null,"code":"var _jsxFileName = \"/Users/user/project_work/react-hook-form_example/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { z } from 'zod';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport './styles.css';\nimport { Input } from './Input';\nfunction App() {\n  var schema = z.object({\n    firstName: z.string().min(1, {\n      message: 'firstName Required'\n    }).max(2, 'firstName max 2'),\n    lastName: z.string().min(1, {\n      message: 'lastName Required'\n    }).max(5, 'lastName max 5')\n  });\n  var methods = useForm({\n    mode: 'all',\n    // \tValidation is triggered on both blur and change events.\n    resolver: zodResolver(schema)\n  });\n  var onSubmit = function onSubmit(data) {\n    alert(JSON.stringify(data));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormProvider, Object.assign({}, methods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: methods.handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: 'firstName',\n    placeholder: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: 'lastName',\n    placeholder: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))));\n}\nvar rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"names":["React","ReactDOM","FormProvider","useForm","z","zodResolver","Input","App","schema","object","firstName","string","min","message","max","lastName","methods","mode","resolver","onSubmit","data","alert","JSON","stringify","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","assign","handleSubmit","name","placeholder","type","rootElement","document","getElementById","render"],"sources":["/Users/user/project_work/react-hook-form_example/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { z } from 'zod';\nimport { zodResolver } from '@hookform/resolvers/zod';\n\nimport './styles.css';\nimport { Input } from './Input';\n\nfunction App() {\n  const schema = z.object({\n    firstName: z\n      .string()\n      .min(1, { message: 'firstName Required' })\n      .max(2, 'firstName max 2'),\n    lastName: z\n      .string()\n      .min(1, { message: 'lastName Required' })\n      .max(5, 'lastName max 5'),\n  });\n  const methods = useForm({\n    mode: 'all', // \tValidation is triggered on both blur and change events.\n    resolver: zodResolver(schema),\n  });\n  const onSubmit = (data: unknown) => {\n    alert(JSON.stringify(data));\n  };\n\n  return (\n    <div className='App'>\n      <FormProvider {...methods}>\n        <form onSubmit={methods.handleSubmit(onSubmit)}>\n          <Input name={'firstName'} placeholder='firstName' />\n          <Input name={'lastName'} placeholder='lastName' />\n          <input type='submit' />\n        </form>\n      </FormProvider>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,YAAY,EAAEC,OAAO,QAAQ,iBAAiB;AACvD,SAASC,CAAC,QAAQ,KAAK;AACvB,SAASC,WAAW,QAAQ,yBAAyB;AAErD,OAAO,cAAc;AACrB,SAASC,KAAK,QAAQ,SAAS;AAE/B,SAASC,GAAGA,CAAA,EAAG;EACb,IAAMC,MAAM,GAAGJ,CAAC,CAACK,MAAM,CAAC;IACtBC,SAAS,EAAEN,CAAC,CACTO,MAAM,CAAC,CAAC,CACRC,GAAG,CAAC,CAAC,EAAE;MAAEC,OAAO,EAAE;IAAqB,CAAC,CAAC,CACzCC,GAAG,CAAC,CAAC,EAAE,iBAAiB,CAAC;IAC5BC,QAAQ,EAAEX,CAAC,CACRO,MAAM,CAAC,CAAC,CACRC,GAAG,CAAC,CAAC,EAAE;MAAEC,OAAO,EAAE;IAAoB,CAAC,CAAC,CACxCC,GAAG,CAAC,CAAC,EAAE,gBAAgB;EAC5B,CAAC,CAAC;EACF,IAAME,OAAO,GAAGb,OAAO,CAAC;IACtBc,IAAI,EAAE,KAAK;IAAE;IACbC,QAAQ,EAAEb,WAAW,CAACG,MAAM;EAC9B,CAAC,CAAC;EACF,IAAMW,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,IAAa,EAAK;IAClCC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEpB,KAAA,CAAAwB,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClB/B,KAAA,CAAAwB,aAAA,CAACtB,YAAY,EAAA8B,MAAA,CAAAC,MAAA,KAAKjB,OAAO;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,iBACvB/B,KAAA,CAAAwB,aAAA;IAAML,QAAQ,EAAEH,OAAO,CAACkB,YAAY,CAACf,QAAQ,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7C/B,KAAA,CAAAwB,aAAA,CAAClB,KAAK;IAAC6B,IAAI,EAAE,WAAY;IAACC,WAAW,EAAC,WAAW;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACpD/B,KAAA,CAAAwB,aAAA,CAAClB,KAAK;IAAC6B,IAAI,EAAE,UAAW;IAACC,WAAW,EAAC,UAAU;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAClD/B,KAAA,CAAAwB,aAAA;IAAOa,IAAI,EAAC,QAAQ;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAClB,CACM,CACX,CAAC;AAEV;AAEA,IAAMO,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACnDvC,QAAQ,CAACwC,MAAM,eAACzC,KAAA,CAAAwB,aAAA,CAACjB,GAAG;EAAAmB,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAE,CAAC,EAAEO,WAAW,CAAC"},"metadata":{},"sourceType":"module"}